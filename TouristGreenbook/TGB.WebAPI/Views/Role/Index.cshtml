@model ReflectionIT.Mvc.Paging.PagingList<Microsoft.AspNetCore.Identity.IdentityRole>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "Index";
}

<h2>Roles</h2>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<form method="get" class="form-inline">
    <input name="filter" class="form-control" placeholder="name"
           value="@Model.RouteValue["Filter"]" />
    <button type="submit" class="btn btn-info">
        <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
    </button>
</form>

<nav aria-label="Suppliers navigation example">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>
<br />
<table class="table">
    <thead>
        <tr class="active">
            <th>
                @Html.SortableHeaderFor(model => model.Name, "Name", this.Model)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="active">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Suppliers navigation example">
    <vc:pager paging-list="@Model" />
</nav>

<div>
    <a asp-controller="Home" asp-action="AdminView" class="btn btn-default">Back to List</a>
</div>